name: Build and Publish Wheels

on:
  push:
    tags:
      - 'v*'
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Build wheels
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            cibw_archs: "native"
          - os: ubuntu-latest
            cibw_archs: "aarch64"
          - os: windows-latest
            cibw_archs: "native ARM64"
          - os: macos-latest
            cibw_archs: "x86_64 arm64"
    steps:
      - name: Set up QEMU
        if: matrix.cibw_archs == 'aarch64'
        uses: docker/setup-qemu-action@v3
        with:
          platforms: arm64

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python 
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'

      # - name: Install dependencies
      #   run: |
      #     python -m pip install cibuildwheel==2.21.2

      # - name: Build wheels
      #   env:
      #     CIBW_BUILD: "cp38-* cp39-* cp310-* cp311-* cp312-*"
      #     CIBW_ARCHS_MACOS: x86_64 arm64
      #     CIBW_ARCHS_LINUX: auto aarch64
      #     CIBW_ARCHS_WINDOWS: auto ARM64
      #   run: python -m cibuildwheel --output-dir wheelhouse

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.21.3
        env:
          CIBW_ARCHS: ${{ matrix.cibw_archs }}

      - name: Upload wheels as artifacts
        uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}-${{ matrix.cibw_archs }}
          path: wheelhouse/*.whl

  collect_and_publish:
    name: Collect and Publish Wheels to PyPI
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Create wheelhouse directory
        run: mkdir wheelhouse

      - name: Download all wheels
        uses: actions/download-artifact@v4
        with:
          pattern: wheels-*
          path: wheelhouse
          merge-multiple: true

      - name: Install twine
        run: |
          python -m pip install --upgrade pip
          pip install twine

      - name: Publish wheels to PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: |
          twine upload wheelhouse/*.whl